"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/index.html","ccc6c77201c9c09ac44ab94066655451"],["/static/css/main.1650dae6.css","b578c6ea932f9499e1c81f8ce927f991"],["/static/js/0.9ba7086b.chunk.js","bbefb4755a2d89d9ba5dd08490988bab"],["/static/js/1.28b4210b.chunk.js","c9eb9cf4c1022d760cdab8963531ad01"],["/static/js/2.289ed182.chunk.js","48b75b4dce989063b562b3bcb402f21f"],["/static/js/3.85942a6c.chunk.js","8dd51d611bc871eba86a67a26de44e9e"],["/static/js/4.0ffc73b7.chunk.js","e8b07d96855571593c41e03d4d35cf0b"],["/static/js/main.e5e14cc9.js","d59d997e24807d5007e9c457adbb30a2"],["/static/media/VickiMorav.51cbf33e.png","51cbf33e11e76b2733131be0017e3ab7"],["/static/media/challonger.a5ab6635.png","a5ab663582083b12535e42c4730763a4"],["/static/media/coding.cfd8eb30.png","cfd8eb3020a1b54e80173b71656e433b"],["/static/media/email.38dfca96.svg","38dfca96377a9027d7fcfa026d51eafe"],["/static/media/github.ff66eb8e.svg","ff66eb8ec531024561b1c1ddab593e2f"],["/static/media/linkedin.bc8e55bb.svg","bc8e55bbfb24f26ad97ba2b25b85c2a5"],["/static/media/logo.4b8b4f4a.svg","4b8b4f4a8b7f4aa4407a1d160c774bd1"],["/static/media/me_wide.073dcfca.png","073dcfca569cb6633f9c7860902767f0"],["/static/media/noise.435b1f17.png","435b1f179e87efb99523ded57468ef34"],["/static/media/shake.50eae65a.gif","50eae65aa1b3d9ea135ece2a38191b0f"],["/static/media/skills.29cdbf1e.png","29cdbf1e7e8dc132b5e5ea46995cc8dc"],["/static/media/skype.7769e418.svg","7769e418663bf0b9e5a4031ac5a8bce5"],["/static/media/updownarrow.f555bdcf.svg","f555bdcf7e814b3f8bbcd21c405d5252"],["/static/media/vickimoravprojectcard.bc5ad53e.png","bc5ad53e9e3679cc3b59fdab4b86bf6d"],["/static/media/websiteprojectcard.609af69a.png","609af69a940f587b2154b9a0d55f95e3"],["/static/media/work.b2af7907.png","b2af7907e49d02c22ab6c0acd8f05fa5"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(a){return new Response(a,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,a,t,c){var n=new URL(e);return c&&n.pathname.match(c)||(n.search+=(n.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),n.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return a.every(function(a){return!a.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],c=new URL(a,self.location),n=createCacheKey(c,hashParamName,t,/\.\w{8}\./);return[c.toString(),n]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var c=new Request(t,{credentials:"same-origin"});return fetch(c).then(function(a){if(!a.ok)throw new Error("Request for "+t+" returned a response with status "+a.status);return cleanResponse(a).then(function(a){return e.put(t,a)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(t){return Promise.all(t.map(function(t){if(!a.has(t.url))return e.delete(t)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var a,t=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(a=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,"index.html"),a=urlsToCacheKeys.has(t));!a&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(t=new URL("/index.html",self.location).toString(),a=urlsToCacheKeys.has(t)),a&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(a){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,a),fetch(e.request)}))}});